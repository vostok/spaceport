version: '3.8'
services:
  # Cassandra - tracing DB
  cassandra:
    image: cassandra:3.11.6
    container_name: cassandra
    hostname: cassandra
    ports:
      - 9042:9042
    environment:
      MAX_HEAP_SIZE: 1024M
      HEAP_NEWSIZE: 1024M
    volumes:
      - casdata:/var/lib/cassandra

  # Graphite + Carbon - metric DB and receiver      
  graphite:
    image: nickstenning/graphite:latest
    container_name: graphite
    ports:
      - 6304:80
      - 2003:2003
    volumes:
      - grpdata:/var/lib/graphite/storage/whisper

  # Grafana - metric visualization
  grafana:
    image: grafana/grafana:6.2.5
    container_name: grafana
    ports:
      - 6303:3000
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_METRICS_GRAPHITE_ADDRESS: "graphite:2003"
    volumes:
      - grfdata:/var/lib/grafana

  # Elasticsearch - log DB
  elasticsearch:
    image: elasticsearch:6.8.7
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: single-node
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data

  # Kibana - log vizualizer
  kibana:
    image: kibana:6.8.7
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - 6305:5601
    environment:
      NODE_OPTIONS: "--max-old-space-size=300"

  # Zookeeper - storage for Kafka
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zk
    container_name: zk
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
    volumes:
      - zkdata:/data
      - zkdatalog:/datalog

  # Kafka - stream processing engine
  kafka:
    image: confluentinc/cp-kafka:5.4.1
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    volumes:
      - kafdata:/var/lib/kafka

  # Contrails - web view for traces
  contrails:
    image: vstk/contrails.web:latest
    container_name: contrails-web
    ports:
      - 6301:80
    depends_on:
      - tracing-api
    volumes:
      - ./etc/properties/contrails/nginx.conf:/etc/nginx/conf.d/default.conf

  # Services
  # Landing with info
  portal:
    image: nginx:1.13.9-alpine
    volumes:
      - ./etc/landing:/usr/share/nginx/html
    ports:
      - 6300:80

  # Configure main components (cassandra, zookeeper, kafka)
  init:
    image: vstk/hercules-init:${VERSION}
    container_name: init
    depends_on:
      - cassandra
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/init:/etc/hercules
    entrypoint: ["sh", "/scripts/write_init_success.sh"]
  
  # Kafka producer    
  gate:
    image: vstk/hercules-gate:${VERSION}
    container_name: gate
    depends_on:
      - init
    ports:
      - 6306:6306
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/gate:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

  # Manager for Kafka tasks    
  stream-manager:
    image: vstk/hercules-stream-manager:${VERSION}
    container_name: stream-manager
    depends_on:
      - init
    ports:
      - 6507:6507
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/stream-manager:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

  # API for creating Kafka tasks    
  management-api:
    image: vstk/hercules-management-api:${VERSION}
    container_name: management-api
    depends_on:
      - stream-manager
    ports:
      - 6307:6307
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/management-api:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]
  
  # Init Kafka streams for logs, metrics and traces    
  curl:
    image: curlimages/curl:latest
    volumes:
      - ./etc/scripts:/scripts
    depends_on:
      - management-api
    entrypoint: ["sh", "/scripts/manage.sh"]


  # Kafka consumer for logs    
  elastic-sink:
    image: vstk/hercules-elastic-sink:${VERSION}
    container_name: elastic-sink
    depends_on:
      - elasticsearch
      - management-api
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/elastic-sink:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

  # Kafka consumer for metrics    
  graphite-sink:
    image: vstk/hercules-graphite-sink:${VERSION}
    container_name: graphite-sink
    depends_on:
      - graphite
      - management-api
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/graphite-sink:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

  # Kafka consumer for traces    
  tracing-sink:
    image: vstk/hercules-tracing-sink:${VERSION}
    container_name: tracing-sink
    depends_on:
      - init
      - management-api
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/tracing-sink:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

  # API for getting traces from Cassandra    
  tracing-api:
    image: vstk/hercules-tracing-api:${VERSION}
    container_name: tracing-api
    ports:
      - 6308:6308
    depends_on:
      - tracing-sink
    volumes:
      - ./etc/init/results:/init/results
      - ./etc/scripts:/scripts
      - ./etc/properties/tracing-api:/etc/hercules
    entrypoint: ["sh", "/scripts/wait_init_success.sh"]

volumes:
  esdata:
    driver: local
  grpdata:
    driver: local
  grfdata:
    driver: local
  casdata:
    driver: local
  zkdata:
    driver: local
  zkdatalog:
    driver: local
  kafdata:
    driver: local
